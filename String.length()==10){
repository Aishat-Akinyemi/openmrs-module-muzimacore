[1mdiff --git a/api/src/main/java/org/openmrs/module/muzima/handler/JsonEncounterQueueDataHandler.java b/api/src/main/java/org/openmrs/module/muzima/handler/JsonEncounterQueueDataHandler.java[m
[1mindex 734b3ed..e8fbdd8 100644[m
[1m--- a/api/src/main/java/org/openmrs/module/muzima/handler/JsonEncounterQueueDataHandler.java[m
[1m+++ b/api/src/main/java/org/openmrs/module/muzima/handler/JsonEncounterQueueDataHandler.java[m
[36m@@ -454,6 +454,21 @@[m [mpublic class JsonEncounterQueueDataHandler implements QueueDataHandler {[m
         return date;[m
     }[m
 [m
[32m+[m[32m    /**[m
[32m+[m[32m     *[m
[32m+[m[32m     * @param datetTimeValue - String representation of the date value.[m
[32m+[m[32m     * @return java.util.Date Object[m
[32m+[m[32m     */[m
[32m+[m[32m    private Date Time(final String datetTimeValue) {[m
[32m+[m[32m        Date date = null;[m
[32m+[m[32m        try {[m
[32m+[m[32m            date = dateFormat.parse(datetTimeValue);[m
[32m+[m[32m        } catch (ParseException e) {[m
[32m+[m[32m            log.error("Unable to parse date data for encounter!", e);[m
[32m+[m[32m        }[m
[32m+[m[32m        return date;[m
[32m+[m[32m    }[m
[32m+[m
     @Override[m
     public boolean accept(final QueueData queueData) {[m
         return StringUtils.equals(DISCRIMINATOR_VALUE, queueData.getDiscriminator());[m
